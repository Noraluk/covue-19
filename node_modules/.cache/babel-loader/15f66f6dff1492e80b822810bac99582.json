{"remainingRequest":"/Users/noralukchotibuth/Desktop/app/covue-19/node_modules/babel-loader/lib/index.js!/Users/noralukchotibuth/Desktop/app/covue-19/node_modules/eslint-loader/index.js??ref--13-0!/Users/noralukchotibuth/Desktop/app/covue-19/src/store/modules/covid-19.js","dependencies":[{"path":"/Users/noralukchotibuth/Desktop/app/covue-19/src/store/modules/covid-19.js","mtime":1586674259655},{"path":"/Users/noralukchotibuth/Desktop/app/covue-19/node_modules/cache-loader/dist/cjs.js","mtime":1585836154925},{"path":"/Users/noralukchotibuth/Desktop/app/covue-19/node_modules/babel-loader/lib/index.js","mtime":1585836154939},{"path":"/Users/noralukchotibuth/Desktop/app/covue-19/node_modules/eslint-loader/index.js","mtime":1583993469213}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvbm9yYWx1a2Nob3RpYnV0aC9EZXNrdG9wL2FwcC9jb3Z1ZS0xOS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBBeGlvcyBmcm9tICJheGlvcyI7CnZhciBzdGF0ZSA9IHsKICBzdW1tYXJ5OiB7CiAgICBjb25maXJtZWQ6IHsKICAgICAgdmFsdWU6IG51bGwKICAgIH0sCiAgICByZWNvdmVyZWQ6IHsKICAgICAgdmFsdWU6IG51bGwKICAgIH0sCiAgICBkZWF0aHM6IHsKICAgICAgdmFsdWU6IG51bGwKICAgIH0KICB9LAogIHNldmVuRGF5czogewogICAgY29uZmlybWVkOiBudWxsLAogICAgZGF0ZXM6IG51bGwKICB9Cn07CnZhciBnZXR0ZXJzID0gewogIGdsb2JhbFN1bW1hcnk6IGZ1bmN0aW9uIGdsb2JhbFN1bW1hcnkoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5zdW1tYXJ5OwogIH0sCiAgZ2xvYmFsU2V2ZW5EYXlzOiBmdW5jdGlvbiBnbG9iYWxTZXZlbkRheXMoc3RhdGUpIHsKICAgIGNvbnNvbGUubG9nKHN0YXRlLnNldmVuRGF5cyk7CiAgICByZXR1cm4gc3RhdGUuc2V2ZW5EYXlzOwogIH0KfTsKdmFyIG11dGF0aW9ucyA9IHsKICBzZXRHbG9iYWxTdW1tYXJ5OiBmdW5jdGlvbiBzZXRHbG9iYWxTdW1tYXJ5KHN0YXRlLCBwYXlsb2FkKSB7CiAgICBzdGF0ZS5zdW1tYXJ5LmNvbmZpcm1lZC52YWx1ZSA9IHBheWxvYWQuY29uZmlybWVkLnZhbHVlOwogICAgc3RhdGUuc3VtbWFyeS5yZWNvdmVyZWQudmFsdWUgPSBwYXlsb2FkLnJlY292ZXJlZC52YWx1ZTsKICAgIHN0YXRlLnN1bW1hcnkuZGVhdGhzLnZhbHVlID0gcGF5bG9hZC5kZWF0aHMudmFsdWU7CiAgfSwKICBzZXRHbG9iYWxTZW52ZW5EYXlzOiBmdW5jdGlvbiBzZXRHbG9iYWxTZW52ZW5EYXlzKHN0YXRlLCBwYXlsb2FkKSB7CiAgICB2YXIgZGF0YXMgPSBwYXlsb2FkLnNsaWNlKHBheWxvYWQubGVuZ3RoIC0gNywgcGF5bG9hZC5sZW5ndGgpOwogICAgdmFyIGNvbmZpcm1lZCA9IG5ldyBBcnJheSgpOwogICAgdmFyIGRhdGVzID0gbmV3IEFycmF5KCk7CiAgICBkYXRhcy5mb3JFYWNoKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIGNvbmZpcm1lZC5wdXNoKGRhdGEudG90YWxDb25maXJtZWQpOwogICAgICBkYXRlcy5wdXNoKGRhdGEucmVwb3J0RGF0ZSk7CiAgICB9KTsKICAgIHN0YXRlLnNldmVuRGF5cy5jb25maXJtZWQgPSBjb25maXJtZWQ7CiAgICBzdGF0ZS5zZXZlbkRheXMuZGF0ZXMgPSBkYXRlczsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIGdldEdsb2JhbFN1bW1hcnk6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfZ2V0R2xvYmFsU3VtbWFyeSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShjb250ZXh0KSB7CiAgICAgIHZhciBfeWllbGQkQXhpb3MkZ2V0LCBkYXRhOwoKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBBeGlvcy5nZXQoImh0dHBzOi8vY292aWQxOS5tYXRoZHJvLmlkL2FwaSIpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIF95aWVsZCRBeGlvcyRnZXQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkQXhpb3MkZ2V0LmRhdGE7CiAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInNldEdsb2JhbFN1bW1hcnkiLCBkYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gZ2V0R2xvYmFsU3VtbWFyeShfeCkgewogICAgICByZXR1cm4gX2dldEdsb2JhbFN1bW1hcnkuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gZ2V0R2xvYmFsU3VtbWFyeTsKICB9KCksCiAgZ2V0R2xvYmFsRGFpbHk6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfZ2V0R2xvYmFsRGFpbHkgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKGNvbnRleHQpIHsKICAgICAgdmFyIF95aWVsZCRBeGlvcyRnZXQyLCBkYXRhOwoKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIEF4aW9zLmdldCgiaHR0cHM6Ly9jb3ZpZDE5Lm1hdGhkcm8uaWQvYXBpL2RhaWx5Iik7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgX3lpZWxkJEF4aW9zJGdldDIgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJEF4aW9zJGdldDIuZGF0YTsKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgic2V0R2xvYmFsU2VudmVuRGF5cyIsIGRhdGEpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIGdldEdsb2JhbERhaWx5KF94MikgewogICAgICByZXR1cm4gX2dldEdsb2JhbERhaWx5LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIGdldEdsb2JhbERhaWx5OwogIH0oKQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIGdldHRlcnM6IGdldHRlcnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["/Users/noralukchotibuth/Desktop/app/covue-19/src/store/modules/covid-19.js"],"names":["Axios","state","summary","confirmed","value","recovered","deaths","sevenDays","dates","getters","globalSummary","globalSevenDays","console","log","mutations","setGlobalSummary","payload","setGlobalSenvenDays","datas","slice","length","Array","forEach","data","push","totalConfirmed","reportDate","actions","getGlobalSummary","context","get","commit","getGlobalDaily"],"mappings":"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","sourcesContent":["import Axios from \"axios\"\n\nconst state = {\n    summary: {\n        confirmed: {\n            value: null\n        },\n        recovered: {\n            value: null\n        },\n        deaths: {\n            value: null\n        },\n    },\n    sevenDays: {\n        confirmed: null,\n        dates: null\n    }\n}\n\nconst getters = {\n    globalSummary: (state) => {\n        return state.summary\n    },\n    globalSevenDays: (state) => {\n        console.log(state.sevenDays)\n        return state.sevenDays\n    }\n}\n\nconst mutations = {\n    setGlobalSummary: (state, payload) => {\n        state.summary.confirmed.value = payload.confirmed.value\n        state.summary.recovered.value = payload.recovered.value\n        state.summary.deaths.value = payload.deaths.value\n    },\n    setGlobalSenvenDays: (state, payload) => {\n        const datas = payload.slice(payload.length - 7, payload.length)\n        var confirmed = new Array()\n        var dates = new Array()\n        datas.forEach(data => {\n            confirmed.push(data.totalConfirmed)\n            dates.push(data.reportDate)\n        });\n        state.sevenDays.confirmed = confirmed\n        state.sevenDays.dates = dates\n    }\n}\n\nconst actions = {\n    getGlobalSummary: async (context) => {\n        let { data } = await Axios.get(\"https://covid19.mathdro.id/api\")\n        context.commit(\"setGlobalSummary\", data)\n    },\n    getGlobalDaily: async (context) => {\n        let { data } = await Axios.get(\"https://covid19.mathdro.id/api/daily\")\n        context.commit(\"setGlobalSenvenDays\", data)\n    }\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}"]}]}